# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Symfony

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  symfony-tests:
    runs-on: ubuntu-latest
    steps:
    #  To automatically get bug fixes and new Php versions for shivammathur/setup-php,
    # change this to (see https://github.com/shivammathur/setup-php#bookmark-versioning):
    # uses: shivammathur/setup-php@v2
    - uses: shivammathur/setup-php@2cb9b829437ee246e9b3cac53555a39208ca6d28
      with:
        php-version: '8.3'
    - uses: actions/checkout@v4

    - name: Update package lists
      run: sudo apt-get update

    - name: Install Apache2
      run: sudo apt-get install -y apache2

    - name: Enable Apache2 modules
      run: |
        sudo a2enmod rewrite
        sudo a2enmod ssl

    - name: Enable default Apache2 site
      run: sudo a2ensite 000-default

    - name: Restart Apache2
      run: sudo systemctl restart apache2

    - name: Check Apache2 status
      run: sudo systemctl status apache2
#
#    - name: Cache Composer packages
#      id: composer-cache
#      uses: actions/cache@v3
#      with:
#        path: vendor
#        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
#        restore-keys: |
#          ${{ runner.os }}-php-
#
#    - name: Install Dependencies
#      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
#
#    - name: Create Database
#      run: |
#        mkdir -p data
#        touch data/database.sqlite
#    - name: Execute tests (Unit and Feature tests) via PHPUnit
#      env:
#        DATABASE_URL: sqlite:///%kernel.project_dir%/data/database.sqlite
#      run: vendor/bin/phpunit

#
#    - name: Deploy to server
#      uses: appleboy/ssh-action@master
#      with:
#        host: ${{ secrets.SERVER_HOST }}
#        username: ${{ secrets.SERVER_USERNAME }}
#        password: ${{ secrets.SERVER_PASSWORD }}
#        port: 22103
#        script: |
#          cd /var/www/enibde
#          git stash
#          git pull origin main
#          git stash pop
#          composer install --optimize-autoloader
#          php bin/console doctrine:migrations:migrate --no-interaction
#          php bin/console cache:clear
#          sudo chown -R www-data:www-data /var/www/enibde/var
#          sudo chmod -R 775 /var/www/enibde/var
#          sudo -u www-data php /var/www/enibde/bin/console cache:clear --env=prod
#          sudo mkdir -p /var/www/enibde/var/cache/prod/asset_mapper
#          sudo chown www-data:www-data /var/www/enibde/var/cache/prod/asset_mapper
#          sudo chmod 775 /var/www/enibde/var/cache/prod/asset_mapper
#          sudo find /var/www/enibde -type d -exec chmod 755 {} \;
#          sudo find /var/www/enibde -type f -exec chmod 644 {} \;
#          sudo chown -R www-data:www-data /var/www/enibde
#          sudo chmod -R g+w /var/www/enibde/var
#          sudo service apache2 restart
